server {
  listen 80;
  listen 443 default_server ssl;
	root /var/www/html/public;
	index index.php index.html index.htm;

	# Make site accessible from http://localhost/
	server_name _;
	ssl_certificate     /etc/nginx/ssl/mycert.crt;
	ssl_certificate_key /etc/nginx/ssl/mycert.key;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers         HIGH:!aNULL:!MD5;

	location / {
		# try to serve file directly, fallback to index.php
		try_files $uri /index.php$is_args$args;
	}

	location ~ ^/index\.php(/|$) {
		fastcgi_pass unix:/var/run/php-fpm.sock;
			# when PHP-FPM is configured to use TCP
			# fastcgi_pass 127.0.0.1:9000;

			fastcgi_split_path_info ^(.+\.php)(/.*)$;
			include fastcgi_params;

			# optionally set the value of the environment variables used in the application
			# fastcgi_param APP_ENV prod;
			# fastcgi_param APP_SECRET <app-secret-id>;
			# fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

			# When you are using symlinks to link the document root to the

			fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
			fastcgi_param DOCUMENT_ROOT $realpath_root;
			# Prevents URIs that include the front controller. This will 404:
			# http://example.com/index.php/some-path
			# Remove the internal directive to allow URIs like this
			internal;
	}

	# return 404 for all other php files not matching the front controller
	# this prevents access to other php files you don't want to be accessible.
	location ~ \.php$ {
		return 404;
	}

	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;
}
